
from H import *
from state_utils import *
# dummy functions



def value(state,k, maxK, alpha, beta):
    if (k == maxK):
        return getHeuristic(state)
    
    if (k%2==0):
        return max_value (state, k, maxK, alpha, beta)
    else:
        return min_value (state, k, maxK, alpha, beta)

def max_value(state, k, maxK, alpha, beta):


    v = -1000000000000000000000000000
    for i in [1,2,3,4,5,6,7]:

        nextState = next_state(state, i)
        if nextState!=-1:
            
            v = max(v, value( nextState, k+1, maxK, alpha, beta))
            alpha=max(alpha, v)
            if alpha >= beta:
                return alpha

        

    return v 

def min_value(state, k, maxK, alpha, beta):


    v = 10000000000000000000000000000
    for i in [1,2,3,4,5,6,7]:

        nextState = next_state(state, i)
        if nextState!=-1:
            
            v = min(v, value( nextState, k+1, maxK, alpha, beta))
            beta=min(beta,v)
            if (alpha >= beta):
                return beta
        
    return v 




if  __name__ == '__main__':
    print("yes")
    initial_state=2**14 - 1
    initial_state<<= 7*3+1
    value(initial_state, 0,8,-10000000000000000000000000000,10000000000000000000000000000)
    print("done")